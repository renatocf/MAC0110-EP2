	O programa construído tem por objetivo permitir ao usuário calcular 4 tipos de funções matemáticas, implementadas com o uso de Polinômios de Taylor. Para utilizar as funções e imprimir relatórios sobre o desempenho delas, existem duas classes disponíveis, explicadas abaixo:


	1 - A classe 'FunçõesMatemáticas'
-------------------------------------    

	A implementação dos Polinômios de Taylor foi feita na classe 'FunçõesMatemáticas', disponível neste arquivo compactado. Ela contém os métodos 'sen(x)', 'cos(x)', 'ln(x)' e 'raiz(x)', para calcular os valores aproximados das funções correspondentes.
    O atributo da classe chamado de 'epsilon' define o erro do cálculo em relação ao valor que seria definido pela função original. A explicação para esse 'erro' vem do próprio conceito de Polinômio de Taylor: uma função do tipo polinomial cujas derivadas são as mesmas das funções originais e que, por esse motivo, oferecem uma aproximação boa para o cálculo da imagem da função original. Justamente por seu uma 'aproximação', sempre conterá um erro.
    Neste ponto, o atributo 'epsilon' poderá ser utilizado como meio de definir a partir de que ponto a diferença de erro será deprezível para o usuário. Por padrão, ele será carregado com 10e-8 (0.0000001) de erro. O utilizador, porém, poderá alterá-lo por meio do método 'carregaEpsilon(x)'.
	Outra limitação a ser ressaltada e que é criada pelo uso de Polinômios de Taylor é o raio de alcance das funções. Para seno e cosseno, esta metodologia é eficiente para todo o eixo real, pois seno e cosseno são funções periódicas de período 2π que convergem para os valores de seno/cosseno reais nesse intervalo (todos os outros valores são derivados destes e podem ser obtidos a partir da retirada/acréscimo de 2π do valor original, resultando em valores equivalentes de mesmo valor de seno/cosseno. Para realizar esta função, foi criado o método 'corrigeValor(x)', que usa o operador de resto (%) e um laço para encontrar o equivalente no intervalo [0, 2π] do valor original passado).
	No caso das funções 'ln(x)' (logaritmo natural) e 'raiz(x)', temos que o raio de ação delas varia no intervalo (0, 2) - excluindo 0 e 2. O Polinômio de Taylor deles é calculado em torno do ponto 0 e recebe como parâmetros um certo valor e calcula a função correspondente para o valor+1. Assim, tem raio de ação de -1 a 1, que deslocados para os positivos (para calcular o ln/raiz do valor, e não do valor+1), chega ao intervalo (0, 2). 
	Esta limitação ocorre por causa da propriedade dos Polinômios de Taylor de serem convergentes em apenas dois casos: dentro de um raio de ação próximo ao ponto para o qual foram calculados e no infinito. Como o conceito de infinitude não existe nos computadores (todos têm memórias limitadas), a ação está restrita a este raio de ação. Como as funções mostradas são Polinômios de MacLaurien (calculadas em torno do ponto 0), o raio delas fica restrito ao intervalo mostrado. Assim, para 'ln(x)' e 'raiz(x)', os valores abaixo de 0 e acima de 2 (inclusive) ficam muito altos - e na notação abstrata, tendem ao infinito.
	Um quinto método, chamado de 'senFloat(x)', implementa a função seno usando variáveis 'float', para ser posteriormente comparada à função 'sen(x)' na classe 'TestesDeDesempenho'.


	2 - A classe 'TestesDeDesempenho'
-------------------------------------

	Os desempenhos dass funções matemáticas calculadas por meio de Polinômios de Taylor podem ser avaliadas por meio do cálculo da média e do desvio-padrão do tempo de execução de cada chamada de método correspondente às funções. Estes testes são impressos em dois relatórios presentes na classe 'TestesDeDesempenho': 

 + método 'imprimeRelatórioDeTempos()': usando o método auxiliar 'estatística(x)' para calcular as médias e desvios-padrão, este método coloca em uma matriz os 100 testes de tempo de execução(feitos 4 vezes - um para 'sen(x)', um para 'cos(x)', outro para 'ln(x) e o último para 'raiz(x)') calculados para a entrada passada pelo usuário. Posteriormente, estes valores são impressos, juntamente com a média e desvio-padrão, para mostrar a eficiência do uso de Polinômios de Taylor para o cálculo das funções.

 + método 'imprimeComparativoDeSenos()': este método também usa o método auxiliar 'estatística(x)' para calcular as médias e desvios-padrão. São feitos também 100 testes, armazenando numa matriz o tempo de execução de cada método. Porém, faz-se, nesse caso, a repetição duas vezes: uma para o 'sen(x)' (seno implementado com variáveis 'double') e 'senFloat(x)' (seno implementado com variáveis 'float', cuja entrada é a mesma da função 'sen', convertida de 'double' para 'float' por meio de typecast). Assim, uma vez calculados, estes valores são impressos, juntamente com o ganho médio do uso da variável 'float' em relação ao uso das variáveis 'double'.
